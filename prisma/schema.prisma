// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  name         String
  login        String         @unique
  password     String
  accounts     Account[]
  Patient      Patient[]
  workingHours WorkingHours[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum SEX {
  male
  female
}

model Patient {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  birthDate DateTime
  sex       SEX
  phone     String?
  email     String?
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Appointments Appointment[]
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model WorkingHours {
  id        String    @id @default(uuid())
  dayOfWeek DayOfWeek
  User      User      @relation(fields: [userId], references: [id])
  userId    String
  startHour String
  endHour   String
}

model Appointment {
  id        String   @id @default(uuid())
  date      DateTime
  Patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
  startHour String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
